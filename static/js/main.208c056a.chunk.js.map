{"version":3,"sources":["components/TodoContext/index.js","components/TodoContext/useLocalStorage.js","components/TodoCounter/index.js","components/TodoSearch/index.js","components/TodoList/index.js","components/TodoItem/index.js","components/CreateTodoButton/index.js","components/Modal/index.js","components/TodoForm/index.js","components/LoadingTodo/index.js","components/App/AppUI.js","components/App/index.js","index.js"],"names":["TodoContext","createContext","TodoProvider","props","itemName","initialValue","useState","item","setItem","loading","setLoading","error","setError","React","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","addTodo","push","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoList","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","LoadingTodo","AppUI","Fragment","Array","fill","map","index","App","render"],"mappings":"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","file":"static/js/main.208c056a.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\nimport { useLocalStorage } from './useLocalStorage'\r\n\r\nconst TodoContext = createContext()\r\n\r\nfunction TodoProvider(props) {\r\n  const {\r\n    item: todos,\r\n    saveItem: saveTodos,\r\n    loading,\r\n    error,\r\n  } = useLocalStorage('TODOS_V1', [])\r\n\r\n  const [searchValue, setSearchValue] = useState('')\r\n\r\n  const [openModal, setOpenModal] = useState(false)\r\n\r\n  //Cantidad de todos marcados como completados\r\n  const completedTodos = todos.filter((todo) => todo.completed === true).length\r\n  const totalTodos = todos.length\r\n\r\n  let searchedTodos = []\r\n\r\n  //Esta validacion revisa los todos existentes, cuando el usuario digita en el input, se hace una busqueda\r\n  if (searchValue.length < 1) {\r\n    searchedTodos = todos\r\n  } else {\r\n    searchedTodos = todos.filter((todo) => {\r\n      const todoText = todo.text.toLowerCase()\r\n      const searchText = searchValue.toLowerCase()\r\n      return todoText.includes(searchText)\r\n    })\r\n  }\r\n\r\n  const completeTodo = (text) => {\r\n    //Cada vez que reciba un texto va a buscar cual todo cumple con esa condicion\r\n    const todoIndex = todos.findIndex((todo) => todo.text === text)\r\n    //Clonamos los todos\r\n    const newTodos = [...todos]\r\n    //Marcamos a ese todo como caso contrario a lo que tenga\r\n    newTodos[todoIndex].completed = !newTodos[todoIndex].completed\r\n    //Actualizamos el estado para re-renderizar\r\n    saveTodos(newTodos)\r\n  }\r\n\r\n  const deleteTodo = (text) => {\r\n    const todoIndex = todos.findIndex((todo) => todo.text === text)\r\n    const newTodos = [...todos]\r\n    newTodos.splice(todoIndex, 1)\r\n    saveTodos(newTodos)\r\n  }\r\n\r\n  const addTodo = (text) => {\r\n    const newTodos = [...todos]\r\n    newTodos.push({\r\n      completed: false,\r\n      text,\r\n    })\r\n    saveTodos(newTodos)\r\n  }\r\n  return (\r\n    <TodoContext.Provider\r\n      value={{\r\n        loading,\r\n        error,\r\n        totalTodos,\r\n        completedTodos,\r\n        searchValue,\r\n        setSearchValue,\r\n        searchedTodos,\r\n        completeTodo,\r\n        deleteTodo,\r\n        addTodo,\r\n        openModal,\r\n        setOpenModal,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TodoContext.Provider>\r\n  )\r\n}\r\n\r\nexport { TodoContext, TodoProvider }\r\n","import React, { useState } from 'react'\r\n\r\n//Llamamos al localstorage\r\nfunction useLocalStorage(itemName, initialValue) {\r\n  //Es el estado inicial\r\n  const [item, setItem] = useState(initialValue)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n\r\n  React.useEffect(() => {\r\n    try {\r\n      setTimeout(() => {\r\n        //Nos trae algun elemento\r\n        const localStorageItem = localStorage.getItem(itemName)\r\n        let parsedItem\r\n\r\n        //Verificamos si ya existe el item\r\n        if (!localStorageItem) {\r\n          //Si no existe le mandamos un arreglo\r\n          localStorage.setItem(itemName, JSON.stringify(initialValue))\r\n          parsedItem = initialValue\r\n        } else {\r\n          //Si existe lo parseamos\r\n          parsedItem = JSON.parse(localStorageItem)\r\n        }\r\n\r\n        setItem(parsedItem)\r\n        setLoading(false)\r\n      }, 1000)\r\n    } catch (error) {\r\n      setError(error)\r\n    }\r\n  }, [itemName, initialValue])\r\n\r\n  const saveItem = (newItem) => {\r\n    try {\r\n      const stringifiedItem = JSON.stringify(newItem)\r\n      localStorage.setItem(itemName, stringifiedItem)\r\n      setItem(newItem)\r\n    } catch (error) {\r\n      setError(error)\r\n    }\r\n  }\r\n\r\n  return { item, saveItem, loading, error }\r\n}\r\n\r\nexport { useLocalStorage }\r\n","import React, { useContext } from 'react'\r\nimport { TodoContext } from '../TodoContext'\r\nimport './TodoCounter.css'\r\n\r\nfunction TodoCounter() {\r\n  const { totalTodos, completedTodos } = useContext(TodoContext)\r\n  return (\r\n    <h2 className='TodoCounter'>\r\n      Has completado {completedTodos} de {totalTodos} TODOs\r\n    </h2>\r\n  )\r\n}\r\n\r\nexport { TodoCounter }\r\n","import React, { useContext } from 'react'\r\nimport { TodoContext } from '../TodoContext'\r\nimport './TodoSearch.css'\r\n\r\nfunction TodoSearch() {\r\n  const { searchValue, setSearchValue } = useContext(TodoContext)\r\n  const onSearchValueChange = (event) => {\r\n    setSearchValue(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <input\r\n      className='TodoSearch'\r\n      placeholder='Cebolla'\r\n      value={searchValue}\r\n      onChange={onSearchValueChange}\r\n    />\r\n  )\r\n}\r\n\r\nexport { TodoSearch }\r\n","import React from 'react'\r\nimport './TodoList.css'\r\n\r\nfunction TodoList(props) {\r\n  return (\r\n    <section>\r\n      <ul>{props.children}</ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport { TodoList }\r\n","import React from 'react'\r\nimport './TodoItem.css'\r\n\r\nfunction TodoItem(props) {\r\n  return (\r\n    <li className='TodoItem'>\r\n      <span\r\n        className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\r\n        onClick={props.onComplete}\r\n      >\r\n        ☑\r\n      </span>\r\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\r\n        {props.text}\r\n      </p>\r\n      <span className='Icon Icon-delete' onClick={props.onDelete}>\r\n        X\r\n      </span>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport { TodoItem }\r\n","import React from 'react'\r\nimport './CreateTodoButton.css'\r\n\r\nfunction CreateTodoButton({ setOpenModal }) {\r\n  const onClickButton = () => {\r\n    setOpenModal((prevState) => !prevState)\r\n  }\r\n\r\n  return (\r\n    <button className='CreateTodoButton' onClick={onClickButton}>\r\n      +\r\n    </button>\r\n  )\r\n}\r\n\r\nexport { CreateTodoButton }\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './Modal.css'\r\n\r\nfunction Modal({ children }) {\r\n  return ReactDOM.createPortal(\r\n    <div className='ModalBackground'>{children}</div>,\r\n    document.getElementById('modal')\r\n  )\r\n}\r\n\r\nexport { Modal }\r\n","import React from 'react'\r\nimport { TodoContext } from '../TodoContext'\r\nimport './TodoForm.css'\r\n\r\nfunction TodoForm() {\r\n  const [newTodoValue, setNewTodoValue] = React.useState('')\r\n  const { addTodo, setOpenModal } = React.useContext(TodoContext)\r\n  const onChange = (event) => {\r\n    setNewTodoValue(event.target.value)\r\n  }\r\n  const onCancel = () => {\r\n    setOpenModal(false)\r\n  }\r\n  const onSubmit = (event) => {\r\n    event.preventDefault()\r\n    addTodo(newTodoValue)\r\n    setOpenModal(false)\r\n  }\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <label>Escribe tu nuevo To Do</label>\r\n      <textarea\r\n        value={newTodoValue}\r\n        onChange={onChange}\r\n        placeholder='Escribe una nueva tarea'\r\n      />\r\n      <div className='TodoForm-buttonContainer'>\r\n        <button\r\n          type='button'\r\n          className='TodoForm-button TodoForm-button-cancel'\r\n          onClick={onCancel}\r\n        >\r\n          Cancelar\r\n        </button>\r\n\r\n        <button className='TodoForm-button TodoForm-button-add' type='submit'>\r\n          Añadir\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport { TodoForm }\r\n","import React from 'react'\r\n\r\nconst LoadingTodo = () => {\r\n  return (\r\n    <li className='TodoItem-loading'>\r\n      <div className='LoaderBalls'>\r\n        <span className='LoaderBalls__item'></span>\r\n        <span className='LoaderBalls__item'></span>\r\n        <span className='LoaderBalls__item'></span>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport { LoadingTodo }\r\n","import React, { useContext } from 'react'\r\nimport './App.css'\r\n\r\nimport { TodoContext } from '../TodoContext'\r\n\r\nimport { TodoCounter } from '../TodoCounter'\r\nimport { TodoSearch } from '../TodoSearch'\r\nimport { TodoList } from '../TodoList'\r\nimport { TodoItem } from '../TodoItem'\r\nimport { CreateTodoButton } from '../CreateTodoButton'\r\nimport { Modal } from '../Modal'\r\nimport { TodoForm } from '../TodoForm'\r\nimport { LoadingTodo } from '../LoadingTodo'\r\n\r\nfunction AppUI() {\r\n  const {\r\n    error,\r\n    loading,\r\n    searchedTodos,\r\n    completeTodo,\r\n    deleteTodo,\r\n    openModal,\r\n    setOpenModal,\r\n  } = useContext(TodoContext)\r\n  return (\r\n    <React.Fragment>\r\n      <TodoCounter />\r\n      <TodoSearch />\r\n\r\n      <TodoList>\r\n        {error && <p>Hubo un error!</p>}\r\n        {loading &&\r\n          new Array(4).fill().map((item, index) => <LoadingTodo key={index} />)}\r\n        {!loading && !searchedTodos.length && <p>Crea tu primer TODO!</p>}\r\n\r\n        {searchedTodos.map((todo) => (\r\n          <TodoItem\r\n            key={todo.text}\r\n            text={todo.text}\r\n            completed={todo.completed}\r\n            onComplete={() => completeTodo(todo.text)}\r\n            onDelete={() => deleteTodo(todo.text)}\r\n          />\r\n        ))}\r\n      </TodoList>\r\n\r\n      {openModal && (\r\n        <Modal>\r\n          <TodoForm />\r\n        </Modal>\r\n      )}\r\n\r\n      <CreateTodoButton setOpenModal={setOpenModal} />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport { AppUI }\r\n","import React from 'react'\nimport { AppUI } from './AppUI'\nimport { TodoProvider } from '../TodoContext'\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}